<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security 
		http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd">


	<security:authentication-manager>
		<security:authentication-provider
		user-service-ref="customUserDetailsService">

<!-- change to username-query ( instead of PreparedStatement
			<security:jdbc-user-service data-source-ref="dataSource" />
 -->
<!-- CustomUserDetailsService 를 사용할 때는 provider 에 의존성 주입을 하기 때문에 
	 mapper 객체의 의존성을 주입 받으므로 jdbc-user-service 를 사용할 수 없다
	 쉽게 말하면 query문이 겹침
	 
			<security:jdbc-user-service data-source-ref="dataSource"
 				users-by-username-query=
 				"select userid, userpw, enabled from tbl_member where userid=?"
 				authorities-by-username-query="
 				select userid, auth from tbl_member_auth where userid=?"
 			/>
 -->
<!-- change to BCrypt 
			<security:password-encoder ref="customPasswordEncoder"/>
 -->
 			
 			<security:password-encoder ref="bcryptPasswordEncoder"/>
		</security:authentication-provider>
	</security:authentication-manager>
	
	
	<bean id="customAccessDenied" class="org.zerock.security.CustomAccessDeniedHandler"></bean>
	<bean id="customLoginSuccess" class="org.zerock.security.CustomLoginSuccessHandler"></bean>
<!--
	<bean id="customPasswordEncoder" class="org.zerock.security.CustomNoOpPasswordEncoder"></bean>
 -->
 	<bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>
 
 	<bean id="customUserDetailsService" class="org.zerock.security.CustomUserDetailsService"></bean>
 
	<!-- custom 에러처리 클래스를 만들어서 에러 처리하기 -->
	<security:http>
		<security:intercept-url pattern="/sample/all" access="permitAll"/>
			
		<security:intercept-url pattern="/sample/member" access="hasRole('ROLE_MEMBER')"/>
			
		<security:intercept-url pattern="/sample/admin" access="hasRole('ROLE_ADMIN')"/>
			
		<security:access-denied-handler ref="customAccessDenied"/>
		
		<security:form-login login-page="/customLogin" 
			authentication-success-handler-ref="customLoginSuccess"/>
		<security:logout logout-url="/customLogout" invalidate-session="true"/>
	</security:http>
<!--
	<security:http auto-config="true" use-expressions="true">
		
		<security:intercept-url pattern="/sample/all" access="permitAll"/>
		
		<security:intercept-url pattern="/sample/member" access="hasRole('ROLE_MEMBER')"/>
		
		<security:intercept-url pattern="/sample/admin" access="hasRole('ROLE_ADMIN')"/>
		
		<security:form-login/>
		
		<security:access-denied-handler error-page="/accessError"/>
	</security:http>
 -->

</beans>
